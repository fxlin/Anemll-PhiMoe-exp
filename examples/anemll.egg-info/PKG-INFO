Metadata-Version: 2.1
Name: anemll
Version: 0.3.0
Summary: Open-source pipeline for accelerating LLMs on Apple Neural Engine (ANE)
Home-page: UNKNOWN
Author: ANEMLL Team
Author-email: realanemll@gmail.com
License: MIT
Project-URL: Homepage, https://anemll.com
Project-URL: Documentation, https://anemll.com/docs
Project-URL: Repository, https://github.com/anemll/anemll
Project-URL: Bug Tracker, https://github.com/anemll/anemll/issues
Project-URL: HuggingFace, https://huggingface.co/anemll
Project-URL: Twitter, https://x.com/anemll
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Intended Audience :: Science/Research
Classifier: Development Status :: 3 - Alpha
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Provides-Extra: dev

# ANEMLL

**ANEMLL** (pronounced like "animal") is an open-source project focused on accelerating the porting of Large Language Models (LLMs) to tensor processors, starting with the Apple Neural Engine (ANE).

The goal is to provide a fully open-source pipeline from model conversion to inference for common LLM architectures running on ANE.

This enables seamless integration and on-device inference for low-power applications on edge devices, ensuring maximum privacy and security.

This is critical for autonomous applications, where models run directly on the device without requiring an internet connection.

## System Requirements

- macOS Sequoia with Apple Neural Engine
- Minimum 16GB RAM
- Python 3.9

## Installation

1. Install ANEMLL:
```bash
pip install -r requirements.txt
pip install anemll
```

2. Install PyTorch with Metal (MPS) support:
```bash
pip install --pre torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/cpu
```

## Model Support

Currently optimized for:
- Meta's LLaMA 3.2 1B and 8B (1024 context) model
- More models coming soon

## Usage
```python
from anemll.models.llama_model import LlamaModel
from anemll.ane_converter.llama_converter import LlamaConverter

# Load LLAMA model
llama_model = LlamaModel("path/to/llama.pt")
llama_model.preprocess()
llama_model.validate()

# Convert to Apple Neural Engine format
converter = LlamaConverter(llama_model)
ane_model = converter.convert()
ane_model.save("llama.mlpackage")
```

## License

ANEMLL is licensed under the MIT License.

## Contributing
Feel free to submit issues and pull requests to improve **ANEMLL**!

## Links & Resources

- üåê Website: [anemll.com](https://anemll.com)
- ü§ó Models: [huggingface.co/anemll](https://huggingface.co/anemll)
- üì± Twitter: [@anemll](https://x.com/anemll)
- üíª GitHub: [github.com/anemll](https://github.com/anemll)

## Contact

For any questions or support, reach out to us at [realanemll@gmail.com](mailto:realanemll@gmail.com)


