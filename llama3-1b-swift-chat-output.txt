swift run -c release anemllcli --meta ~/models/anem512_0.3.0/meta.yaml \LUT8_ctx 
--prompt "List US Presidents"
[1/1] Planning build
Building for production...
[1/1] Write swift-version--58304C5D6DBC2206.txt
Build of product 'anemllcli' complete! (0.31s)
Reading YAML from: /Users/felixlin/models/anemll-Meta-Llama-3.2-1B-LUT8_ctx512_0.3.0/meta.yaml
YAML contents loaded successfully
Base directory: /Users/felixlin/models/anemll-Meta-Llama-3.2-1B-LUT8_ctx512_0.3.0
Model prefix: llama
Predefined paths from meta.yaml:
  - embeddings: llama_embeddings_lut8.mlmodelc
  - lm_head: llama_lm_head_lut8.mlmodelc
  - ffn: llama_FFN_PF_lut8.mlmodelc

Model paths (Python style):
Raw paths before .mlmodelc:
Embed: llama_embeddings_lut8
LMHead: llama_lm_head_lut8
FFN: llama_FFN_PF_lut8_chunk_01of02

Full paths:
Embed: /Users/felixlin/models/anemll-Meta-Llama-3.2-1B-LUT8_ctx512_0.3.0/llama_embeddings_lut8.mlmodelc
LMHead: /Users/felixlin/models/anemll-Meta-Llama-3.2-1B-LUT8_ctx512_0.3.0/llama_lm_head_lut8.mlmodelc
FFN: /Users/felixlin/models/anemll-Meta-Llama-3.2-1B-LUT8_ctx512_0.3.0/llama_FFN_PF_lut8.mlmodelc
Generated canonical chunk path: /Users/felixlin/models/anemll-Meta-Llama-3.2-1B-LUT8_ctx512_0.3.0/llama_FFN_PF_lut8_chunk_01of02.mlmodelc

Initializing tokenizer...

Tokenizer Debug:
Input modelPath: /Users/felixlin/models/anemll-Meta-Llama-3.2-1B-LUT8_ctx512_0.3.0
Using template: deephermes
Using modelURL: /Users/felixlin/models/anemll-Meta-Llama-3.2-1B-LUT8_ctx512_0.3.0

Files in directory:
- llama_lm_head_lut8.mlmodelc
- tokenizer_config.json
- config.json
- tokenizer.json
- llama_FFN_PF_lut8_chunk_01of02.mlmodelc
- chat_full.py
- llama_embeddings_lut8.mlmodelc
- README.md
- llama_FFN_PF_lut8_chunk_02of02.mlmodelc
- chat.py
- .gitattributes
- .git
- meta.yaml

Checking specific files:
config.json exists: true
tokenizer_config.json exists: true
tokenizer.json exists: true

Attempting to load tokenizer...
Loading tokenizer_config.json
Found chat_template in tokenizer_config.json: {{- bos_token }}
{%- if custom_tools is defined %}
    {%- set tools = custom_tools %}
{%- endif %}
{%- if not tools_in_user_message is defined %}
    {%- set tools_in_user_message = true %}
{%- endif %}
{%- if not date_string is defined %}
    {%- if strftime_now is defined %}
        {%- set date_string = strftime_now("%d %b %Y") %}
    {%- else %}
        {%- set date_string = "26 Jul 2024" %}
    {%- endif %}
{%- endif %}
{%- if not tools is defined %}
    {%- set tools = none %}
{%- endif %}

{#- This block extracts the system message, so we can slot it into the right place. #}
{%- if messages[0]['role'] == 'system' %}
    {%- set system_message = messages[0]['content']|trim %}
    {%- set messages = messages[1:] %}
{%- else %}
    {%- set system_message = "" %}
{%- endif %}

{#- System message #}
{{- "<|start_header_id|>system<|end_header_id|>\n\n" }}
{%- if tools is not none %}
    {{- "Environment: ipython\n" }}
{%- endif %}
{{- "Cutting Knowledge Date: December 2023\n" }}
{{- "Today Date: " + date_string + "\n\n" }}
{%- if tools is not none and not tools_in_user_message %}
    {{- "You have access to the following functions. To call a function, please respond with JSON for a function call." }}
    {{- 'Respond in the format {"name": function name, "parameters": dictionary of argument name and its value}.' }}
    {{- "Do not use variables.\n\n" }}
    {%- for t in tools %}
        {{- t | tojson(indent=4) }}
        {{- "\n\n" }}
    {%- endfor %}
{%- endif %}
{{- system_message }}
{{- "<|eot_id|>" }}

{#- Custom tools are passed in a user message with some extra guidance #}
{%- if tools_in_user_message and not tools is none %}
    {#- Extract the first user message so we can plug it in here #}
    {%- if messages | length != 0 %}
        {%- set first_user_message = messages[0]['content']|trim %}
        {%- set messages = messages[1:] %}
    {%- else %}
        {{- raise_exception("Cannot put tools in the first user message when there's no first user message!") }}
{%- endif %}
    {{- '<|start_header_id|>user<|end_header_id|>\n\n' -}}
    {{- "Given the following functions, please respond with a JSON for a function call " }}
    {{- "with its proper arguments that best answers the given prompt.\n\n" }}
    {{- 'Respond in the format {"name": function name, "parameters": dictionary of argument name and its value}.' }}
    {{- "Do not use variables.\n\n" }}
    {%- for t in tools %}
        {{- t | tojson(indent=4) }}
        {{- "\n\n" }}
    {%- endfor %}
    {{- first_user_message + "<|eot_id|>"}}
{%- endif %}

{%- for message in messages %}
    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}
        {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\n\n'+ message['content'] | trim + '<|eot_id|>' }}
    {%- elif 'tool_calls' in message %}
        {%- if not message.tool_calls|length == 1 %}
            {{- raise_exception("This model only supports single tool-calls at once!") }}
        {%- endif %}
        {%- set tool_call = message.tool_calls[0].function %}
        {{- '<|start_header_id|>assistant<|end_header_id|>\n\n' -}}
        {{- '{"name": "' + tool_call.name + '", ' }}
        {{- '"parameters": ' }}
        {{- tool_call.arguments | tojson }}
        {{- "}" }}
        {{- "<|eot_id|>" }}
    {%- elif message.role == "tool" or message.role == "ipython" %}
        {{- "<|start_header_id|>ipython<|end_header_id|>\n\n" }}
        {%- if message.content is mapping or message.content is iterable %}
            {{- message.content | tojson }}
        {%- else %}
            {{- message.content }}
        {%- endif %}
        {{- "<|eot_id|>" }}
    {%- endif %}
{%- endfor %}
{%- if add_generation_prompt %}
    {{- '<|start_header_id|>assistant<|end_header_id|>\n\n' }}
{%- endif %}

Found EOS token in tokenizer_config.json: <|eot_id|>
Found BOS token in tokenizer_config.json: <|begin_of_text|>
Not found PAD token in tokenizer_config.json: <pad>
Using template-specific PAD token: <|padding|> for template: deephermes
✓ EOS token ID: 128000 for token '<|eot_id|>'
✓ BOS token ID: 128000 for token '<|begin_of_text|>'
✓ PAD token ID: 128000 for token '<|padding|>'
✓ Tokenizer loaded successfully!

Loading models...

Loading Models:
[□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□] 0%
Loading Embeddings Model:
Path: /Users/felixlin/models/anemll-Meta-Llama-3.2-1B-LUT8_ctx512_0.3.0/llama_embeddings_lut8.mlmodelc
✓ Embeddings model loaded
[■■■□□□□□□□□□□□□□□□□□□□□□□□□□□□] 10%
Loading LM Head Model:
Path: /Users/felixlin/models/anemll-Meta-Llama-3.2-1B-LUT8_ctx512_0.3.0/llama_lm_head_lut8.mlmodelc
✓ LM Head model loaded
[■■■■■■□□□□□□□□□□□□□□□□□□□□□□□□] 20%
Loading FFN Chunks:
Model directory: /Users/felixlin/models/anemll-Meta-Llama-3.2-1B-LUT8_ctx512_0.3.0
✅ Found 2 available chunks: [1, 2]
Loading chunk 1: /Users/felixlin/models/anemll-Meta-Llama-3.2-1B-LUT8_ctx512_0.3.0/llama_FFN_PF_lut8_chunk_01of02.mlmodelc
Loading inference chunk 1: /Users/felixlin/models/anemll-Meta-Llama-3.2-1B-LUT8_ctx512_0.3.0/llama_FFN_PF_lut8_chunk_01of02.mlmodelc
✅ Inference chunk 1 loaded
[■■■■■■■■■■■■□□□□□□□□□□□□□□□□□□] 40%Loading prefill chunk 1: /Users/felixlin/models/anemll-Meta-Llama-3.2-1B-LUT8_ctx512_0.3.0/llama_FFN_PF_lut8_chunk_01of02.mlmodelc
✅ Prefill chunk 1 loaded
[■■■■■■■■■■■■■■■■■■□□□□□□□□□□□□] 60%Loading chunk 2: /Users/felixlin/models/anemll-Meta-Llama-3.2-1B-LUT8_ctx512_0.3.0/llama_FFN_PF_lut8_chunk_02of02.mlmodelc
Loading inference chunk 2: /Users/felixlin/models/anemll-Meta-Llama-3.2-1B-LUT8_ctx512_0.3.0/llama_FFN_PF_lut8_chunk_02of02.mlmodelc
✅ Inference chunk 2 loaded
[■■■■■■■■■■■■■■■■■■■■■■■■□□□□□□] 80%Loading prefill chunk 2: /Users/felixlin/models/anemll-Meta-Llama-3.2-1B-LUT8_ctx512_0.3.0/llama_FFN_PF_lut8_chunk_02of02.mlmodelc
✅ Prefill chunk 2 loaded
[■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■] 100%✅ Successfully loaded all 2 FFN chunks
[■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■] 100%
✓ Models loaded successfully in 0.42s
InferenceManager initialized with v110=false

Processing prompt: "List US Presidents"
Assistant: Here's a list of all 45 Presidents of the United States in chronological order:

1. George Washington (1789-1797)
2. John Adams (1797-1801)
3. Thomas Jefferson (1801-1809)
4. James Madison (1809-1817)
5. James Monroe (1817-1825)
6. John Quincy Adams (1825-1829)
7. Andrew Jackson (1829-1837)
8. Martin Van Buren (1837-1841)
9. William Henry Harrison (1841-1841)
10. John Tyler (1841-1845)
11. James K. Polk (1845-1849)
12. Zachary Taylor (1849-1850)
13. Millard Fillmore (1850-1853)
14. Franklin Pierce (1853-1857)
15. James Buchanan (1857-1861)
16. Abraham Lincoln (1861-1865)
17. Andrew Johnson (1865-1869)
18. Ulysses S. Grant (1869-1877)
19. Rutherford B. Hayes (1877-1881)
20. James A. Garfield (1881-1881)
21. Chester A. Arthur (1881-1885)
22. Grover Cleveland (1885-1889)
23. Benjamin Harrison (1889-1893)
24. Grover Cleveland (1893-1897)
25. William McKinley (1897-1901)
26. Theodore Roosevelt (1901-1909)
27. William Howard Taft (1909-1913)
28. Woodrow Wilson (1913-1921)
29. Warren G. Harding (1921-1923)
30. Calvin Coolidge (1923-1929)
31. Herbert Hoover (1929-1933)
32. Franklin D. Roosevelt (1933-1945)
33. Harry S. Truman (1945-1953)
34. Dwight D. Eisenhower (1953-1961)
35. John F. Kennedy (1961-1963)
36. Lyndon B. Johnson (1963-1969)
37. Richard Nixon (1969-1974)
38. Gerald R. 47.99.78. 4482 3, 1955- 1966-20 27 - 6 -  - 5 - 3 - 2 -

37.8 t/s, TTFT: 49.0ms (775.0 t/s), 512 tokens [Stop reason: max_tokens]
